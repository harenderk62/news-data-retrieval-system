# Spring Application Name
spring.application.name=news-retrieval-system-test

# Database configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true

# Redis Configuration for Tests
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=
spring.redis.database=0
spring.redis.timeout=60000

# LLM Service Mock URL
llm.service.url=http://localhost:8081

# Kafka configuration
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.group-id=trending_worker_test
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=userEvent:com.example.news_retrieval_system.model.UserEvent
spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.news_retrieval_system.model
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.news_retrieval_system.model.UserEvent

# Test Configuration
spring.main.allow-bean-definition-overriding=true
spring.test.database.replace=none
