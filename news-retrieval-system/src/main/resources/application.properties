spring.application.name=news-retrieval-system

spring.datasource.url=jdbc:postgresql://postgres:5432/newsdb
spring.datasource.username=news
spring.datasource.password=secret
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false

# Redis Configuration
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=
spring.redis.database=0
spring.redis.timeout=60000

# Kafka
spring.kafka.bootstrap-servers=kafka:29092
spring.kafka.consumer.group-id=trending_worker
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.news_retrieval_system.dto,com.example.news_retrieval_system.model
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.news_retrieval_system.model.UserEvent
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Kafka Topics
spring.kafka.topics.user-events=user_events

# Test Data Generation
test.data.enabled=true

# LLM Service
server.port=8080
llm.service.url=${LLM_SERVICE_URL:http://localhost:8080}

logging.level.com.example.news_retrieval_system.service=DEBUG